/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Noss (https://sketchfab.com/Noss)
license: CC-BY-NC-ND-4.0 (http://creativecommons.org/licenses/by-nc-nd/4.0/)
source: https://sketchfab.com/3d-models/sculpt-january-day-19-lovecraftian-34ad2501108e4fceb9394f5b816b9f42
title: Sculpt january day #19 - Lovecraftian
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import FloorBlock from "component/FloorBlock/FloorBlock";
import { useControls } from "leva";
import { data } from "utils/constants";
import { useStore } from "store/store";
export default function Alien() {
  const { nodes, materials } = useGLTF("/alien.glb");
  // const { floorColor, backgroundColor } = useControls({
  //   floorColor: data.alien.floorColor,
  //   backgroundColor: "#cda183",
  // });
  const [alienBodyRef, alienGroupRef] = useStore((state) => [
    state.alienBodyRef,
    state.alienGroupRef,
  ]);
  const offset = 0.01;
  return (
    <group
      ref={(node) => (alienGroupRef.current = node)}
      rotation={[0, 0, -Math.PI]}
    >
      <group
        ref={(node) => (alienBodyRef.current = node)}
        rotation={[-Math.PI / 2, 0, Math.PI / 2]}
        position={[0, 0.05, 0]}
      >
        <mesh geometry={nodes.Object_2.geometry} material={materials.None} />
        <mesh geometry={nodes.Object_3.geometry} material={materials.cyclo} />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_4.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_5.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_6.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_7.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_8.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_9.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_10.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_11.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_12.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_13.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_14.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_15.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_16.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_17.geometry}
          material={materials.sculpture}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_18.geometry}
          material={materials.sculpture_eye_d}
        />
        <mesh
          position={[0, 0, offset]}
          geometry={nodes.Object_19.geometry}
          material={materials.sculpture_eye_g}
        />
      </group>
      <FloorBlock
        floorColor={data.alien.floorColor}
        backgroundColor={data.alien.backgroundColor}
      />
    </group>
  );
}

useGLTF.preload("/alien.glb");
